# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                                                             controllers.Application.dash(title:String="Spark Notebook", path:String="/")
GET     /tree/*path                                                   controllers.Application.dash(title:String="Spark Notebook", path:String)

GET     /api/config/tree                                              controllers.Application.configTree()
GET     /api/config/common                                            controllers.Application.configCommon()
GET     /api/config/notebook                                          controllers.Application.configNotebook()
GET     /api/kernelspecs                                              controllers.Application.kernelSpecs()

POST    /api/sessions                                                 controllers.Application.createSession()
GET     /api/sessions                                                 controllers.Application.sessions()

POST    /api/kernels/:kernelId/restart                                controllers.Application.restartKernel(kernelId:String)


GET     /api/contents/                                                controllers.Application.contents(type:String, path:String="/")
GET     /api/contents/*path                                           controllers.Application.contents(type:String, path:String)
GET     /api/contents/*snb/checkpoints                                controllers.Application.listCheckpoints(snb:String)
POST    /api/contents/*snb/checkpoints                                controllers.Application.saveCheckpoint(snb:String)
POST    /api/contents                                                 controllers.Application.newNotebook(path:String="/")
POST    /api/contents/                                                controllers.Application.newNotebook(path:String="/")
POST    /api/contents/*path                                           controllers.Application.newNotebook(path:String)
PATCH   /api/contents/*path                                           controllers.Application.renameNotebook(path:String)
PUT     /api/contents/*path                                           controllers.Application.saveNotebook(path:String)
DELETE  /api/contents/*path                                           controllers.Application.deleteNotebook(path:String)


GET     /notebooks/*snb                                               controllers.Application.openNotebook(snb:String)
GET     /edit/:snb                                                    controllers.Application.openNotebook(snb:String)

GET     /files/*path                                                  controllers.Application.dlNotebookAs(path:String, format:String="json")
GET     /nbconvert/:format/*path                                      controllers.Application.dlNotebookAs(path:String, format:String)

GET     /clusters                                                     controllers.Application.clusters()
POST    /clusters                                                     controllers.Application.addCluster()


# Web Sockets
GET     /ws/observable/:contextId                                     controllers.Application.openObservable(contextId:String)
GET     /ws/api/kernels/:kernelId/channels                            controllers.Application.openKernel(kernelId:String)


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                                 controllers.Assets.at(path="/public", file)